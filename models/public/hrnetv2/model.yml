# Copyright (c) 2019 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

description: >-
  HRNetV2-W48 is semantic-segmentation model based on architecture described in paper
  High-Resolution Representations for Labeling Pixels and Regions <https://arxiv.org/abs/1904.04514>.
  This is PyTorch implementation based on retaining high resolution representations throughout the model
  and pretrained on ADE20k dataset. The model input is a blob that consists of a
  single image of [1, 3, 320, 320] in RGB order.
  For details about implementation of model, check out the Semantic Segmentation on MIT ADE20K dataset in PyTorch
  <https://github.com/CSAILVision/semantic-segmentation-pytorch>.
task_type: semantic_segmentation
files:
  - name: model/official_hrnet.py
    size: 16557
    sha256: b5a3df511c3ba6441f6a2d61df65feed50222875353ebc50535d3eb67877e35c
    source: https://raw.githubusercontent.com/alexmasterdi/semantic-segmentation-pytorch/master/mit_semseg/models/official_hrnet.py
  - name: model/official_models.py
    size: 4923
    sha256: 5ef116b611f594be1dfa4a77710fb1cd9759fca14f6946dc6975547d41389838
    source: https://raw.githubusercontent.com/alexmasterdi/semantic-segmentation-pytorch/master/mit_semseg/models/official_models.py
  - name: model/__init__.py
    size: 62
    sha256: edd801b1e35637287894c1a083560f942a9063640fb1b0218410256aa8effbc1
    source: https://raw.githubusercontent.com/alexmasterdi/semantic-segmentation-pytorch/master/mit_semseg/models/__init__.py
  - name: model/official_batchnorm.py
    size: 16380
    sha256: e8ee3fc4ff0903f83cbaa7a5e516790556b492f8917d840173dacc29424f40ec
    source: https://raw.githubusercontent.com/alexmasterdi/semantic-segmentation-pytorch/master/mit_semseg/models/official_batchnorm.py
  - name: ckpt/decoder_epoch_30.pth
    size: 4780389
    sha256: 6060764940b620804befaca4df916de019c82c4e96ace00916991e223af37d1e
    source: http://sceneparsing.csail.mit.edu/model/pytorch/ade20k-hrnetv2-c1/decoder_epoch_30.pth
  - name: ckpt/encoder_epoch_30.pth
    size: 262518297
    sha256: 0bba1a5da1484b21a42f89e05459e434119c829d6aae64d1c6d3ae0c38d2b43c
    source: http://sceneparsing.csail.mit.edu/model/pytorch/ade20k-hrnetv2-c1/encoder_epoch_30.pth
conversion_to_onnx_args:
  - --model-path=$dl_dir
  - --model-name=SegmentationModule
  - --onnx-version=9
  - --prepare-params=True
  - --import-module=model
  - --input-shape=1,3,320,320
  - --output-file=$conv_dir/hrnetv2.onnx
  - --model-param=net_enc='ModelBuilder.build_encoder("hrnetv2", 720, "$dl_dir/ckpt/encoder_epoch_30.pth")'
  - --model-param=net_dec='ModelBuilder.build_decoder("c1", 720, 150, "$dl_dir/ckpt/decoder_epoch_30.pth", True)'
  - --model-param=crit='None'
  - --input-names=data
  - --output-names=prob
model_optimizer_args:
  - --reverse_input_channels
  - --input_shape=[1,3,320,320]
  - --input=data
  - --mean_values=data[123.675,116.28,103.53]
  - --scale_values=data[58.395,57.12,57.375]
  - --output=prob
  - --input_model=$conv_dir/hrnetv2.onnx
framework: pytorch
license: https://raw.githubusercontent.com/CSAILVision/semantic-segmentation-pytorch/master/LICENSE